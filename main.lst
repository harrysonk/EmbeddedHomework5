


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ************
    2 00000000         ; main.s
    3 00000000         ; Author:
    4 00000000         ; Date Created:
    5 00000000         ; Last Modified:
    6 00000000         ; Section Number:
    7 00000000         ; Instructor: 
    8 00000000         ; Homework Number: 5
    9 00000000         ;   Brief description of the program
   10 00000000         ;
   11 00000000         ;*******************************************************
                       ************
   12 00000000         
   13 00000000         
   14 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   15 00000000                 THUMB
   16 00000000                 EXPORT           Start
   17 00000000         Start
   18 00000000         
   19 00000000         main
   20 00000000 F000 F808       BL               Question1
   21 00000004 F000 F829       BL               Question2
   22 00000008 F000 F828       BL               Question3
   23 0000000C F000 F834       BL               Question4
   24 00000010 E7FF            B                loop
   25 00000012         loop
   26 00000012         
   27 00000012 E7FE            B                loop
   28 00000014         
   29 00000014         
   30 00000014         Question1
   31 00000014 F244 5167       MOV              R1, #0x4567
   32 00000018 F2C0 1123       MOVT             R1, #0x0123
   33 0000001C F04F 08FF       MOV              R8, #0x00FF
   34 00000020 F6CF 78FF       MOVT             R8, #0xFFFF ;Setting up r8 to h
                                                            ave bit-clear value
                                                             of 0x0000FF00
   35 00000024 F64F 79FF       MOV              R9, #0xFFFF
   36 00000028 F6CF 7900       MOVT             R9, #0xFF00 ;Setting up r9 to h
                                                            ave bit-clear value
                                                             of 0x00FF0000
   37 0000002C F04F 0200       MOV              R2, #0x0000
   38 00000030 F2C0 0200       MOVT             R2, #0x0000 ;r2 should be 0x000
                                                            00000
   39 00000034 EA4F 6201       LSL              R2, R1, #24 ; Isolate last byte
                                                             to put at beginnin
                                                            g of r2, r2 is 0x67
                                                            000000
   40 00000038 EA4F 6311       LSR              r3, R1, #24 ; Isolate first byt
                                                            e to put at end of 
                                                            r2
   41 0000003C EA43 0202       ORR              R2, R3, R2  ; r2 now has first 
                                                            and last byte corre
                                                            ct, r2 is now 0x670
                                                            00001
   42 00000040 EA21 0408       BIC              R4, R1, R8  ; Clear bits to iso
                                                            late second set of 



ARM Macro Assembler    Page 2 


                                                            middle bits, r4 is 
                                                            0x00004500
   43 00000044 EA4F 2504       LSL              R5, R4, #8  ; r5 is now 0x00450
                                                            000
   44 00000048 EA42 0205       ORR              R2, R2, R5  ; r2 is now 0x67450
                                                            001
   45 0000004C EA21 0609       BIC              R6, R1, R9  ; Clear bits to iso
                                                            late first set of m
                                                            iddle bits, r6 is 0
                                                            x00230000
   46 00000050 EA4F 2716       LSR              R7, R6, #8  ; r6 is now 0x00002
                                                            300
   47 00000054 EA47 0202       ORR              R2, R7, R2  ; r2 is now finally
                                                             correct being 0x67
                                                            452301
   48 00000058 4770            BX               LR
   49 0000005A         
   50 0000005A         Question2
   51 0000005A 4770            BX               LR
   52 0000005C         
   53 0000005C         Question3
   54 0000005C         ;Assume x is stored in r0 and result is stored in r1
   55 0000005C F06F 004E       MOV              R0, #-79    ;this is setting wh
                                                            atever you want x t
                                                            o be
   56 00000060 B120            CBZ              R0, zero    ;Branch if 0
   57 00000062 2800            CMP              R0, #0      ;Compare with 0
   58 00000064 DB05            BLT              negativeOne ;Branch less than 0
                                                            
   59 00000066 F04F 0101       MOV              R1, #1      ; If not 0 and not 
                                                            less than 0, set r1
                                                             (output) to 1
   60 0000006A 4770            BX               LR          ;Back to main
   61 0000006C         zero
   62 0000006C F04F 0100       MOV              R1, #0      ;If zero set r1 to 
                                                            0
   63 00000070 4770            BX               LR          ;back to main
   64 00000072         negativeOne
   65 00000072 F04F 31FF       MOV              R1, #-1     ;If less than 1 set
                                                             r1 to be -1 (0xfff
                                                            fffff)
   66 00000076 4770            BX               LR          ;back to main
   67 00000078         
   68 00000078         Question4
   69 00000078         ;Let r0 be a, r1 be b, r2 be c, and r3 store result
   70 00000078 F04F 0004       MOV              R0, #4      ;set r0 to be whate
                                                            ver number
   71 0000007C F04F 0103       MOV              R1, #3      ;set r1 to be whate
                                                            ver number
   72 00000080 F04F 0201       MOV              R2, #1      ;set r2 to be whate
                                                            ver number
   73 00000084 4288            CMP              R0, R1      ; Compare a and b
   74 00000086 DB01            BLT              aLessThanB  ;Branch if a is les
                                                            s than b
   75 00000088 DC05            BGT              aGreaterThanSomething
   76 0000008A 4770            BX               LR
   77 0000008C         aLessThanB
   78 0000008C 4290            CMP              R0, R2      ;Compare a an c
   79 0000008E DB00            BLT              aIsTheMin   ;A is the min so ju



ARM Macro Assembler    Page 3 


                                                            mp to aIsTheMin
   80 00000090 DC01            BGT              aGreaterThanSomething
   81 00000092         aIsTheMin
   82 00000092 4603            MOV              R3, R0
   83 00000094 4770            BX               LR
   84 00000096         aGreaterThanSomething
   85 00000096 4281            CMP              R1, R0      ;Compare b and a
   86 00000098 DB01            BLT              bLessThanA
   87 0000009A DC06            BGT              bGreaterThanSomething
   88 0000009C 4770            BX               LR
   89 0000009E         bLessThanA
   90 0000009E 4291            CMP              R1, R2      ;compare b with c
   91 000000A0 DB01            BLT              bIsTheMin
   92 000000A2 DC02            BGT              bGreaterThanSomething
   93 000000A4 4770            BX               LR
   94 000000A6         bIsTheMin
   95 000000A6 460B            MOV              R3, R1
   96 000000A8 4770            BX               LR
   97 000000AA         bGreaterThanSomething
   98 000000AA 4282            CMP              R2, R0      ;Compare c and a
   99 000000AC DB00            BLT              cLessThanA  ;Branch if c is les
                                                            s than a
  100 000000AE 4770            BX               LR
  101 000000B0         cLessThanA
  102 000000B0 428A            CMP              R2, R1      ;Compare c and b
  103 000000B2 DB00            BLT              cIsTheMin
  104 000000B4 4770            BX               LR
  105 000000B6         cIsTheMin
  106 000000B6 4613            MOV              R3, R2
  107 000000B8 4770            BX               LR
  108 000000BA         
  109 000000BA         
  110 000000BA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  111 000000BC                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IM:\Keil\ARM\RV31\INC -IM:\Keil\ARM\CMSIS\Include -IM:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 14 in file main.s
   Uses
      None
Comment: .text unused
Question1 00000014

Symbol: Question1
   Definitions
      At line 30 in file main.s
   Uses
      At line 20 in file main.s
Comment: Question1 used once
Question2 0000005A

Symbol: Question2
   Definitions
      At line 50 in file main.s
   Uses
      At line 21 in file main.s
Comment: Question2 used once
Question3 0000005C

Symbol: Question3
   Definitions
      At line 53 in file main.s
   Uses
      At line 22 in file main.s
Comment: Question3 used once
Question4 00000078

Symbol: Question4
   Definitions
      At line 68 in file main.s
   Uses
      At line 23 in file main.s
Comment: Question4 used once
Start 00000000

Symbol: Start
   Definitions
      At line 17 in file main.s
   Uses
      At line 16 in file main.s
Comment: Start used once
aGreaterThanSomething 00000096

Symbol: aGreaterThanSomething
   Definitions
      At line 84 in file main.s
   Uses
      At line 75 in file main.s
      At line 80 in file main.s

aIsTheMin 00000092




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: aIsTheMin
   Definitions
      At line 81 in file main.s
   Uses
      At line 79 in file main.s
Comment: aIsTheMin used once
aLessThanB 0000008C

Symbol: aLessThanB
   Definitions
      At line 77 in file main.s
   Uses
      At line 74 in file main.s
Comment: aLessThanB used once
bGreaterThanSomething 000000AA

Symbol: bGreaterThanSomething
   Definitions
      At line 97 in file main.s
   Uses
      At line 87 in file main.s
      At line 92 in file main.s

bIsTheMin 000000A6

Symbol: bIsTheMin
   Definitions
      At line 94 in file main.s
   Uses
      At line 91 in file main.s
Comment: bIsTheMin used once
bLessThanA 0000009E

Symbol: bLessThanA
   Definitions
      At line 89 in file main.s
   Uses
      At line 86 in file main.s
Comment: bLessThanA used once
cIsTheMin 000000B6

Symbol: cIsTheMin
   Definitions
      At line 105 in file main.s
   Uses
      At line 103 in file main.s
Comment: cIsTheMin used once
cLessThanA 000000B0

Symbol: cLessThanA
   Definitions
      At line 101 in file main.s
   Uses
      At line 99 in file main.s
Comment: cLessThanA used once
loop 00000012

Symbol: loop
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 25 in file main.s
   Uses
      At line 24 in file main.s
      At line 27 in file main.s

main 00000000

Symbol: main
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: main unused
negativeOne 00000072

Symbol: negativeOne
   Definitions
      At line 64 in file main.s
   Uses
      At line 58 in file main.s
Comment: negativeOne used once
zero 0000006C

Symbol: zero
   Definitions
      At line 61 in file main.s
   Uses
      At line 56 in file main.s
Comment: zero used once
18 symbols
349 symbols in table
